---
name: Merge Cleanup

on:
  # Run Workflow upon pull request
  pull_request:
    types: [closed]
  # Run Workflow upon pull request to specified target branch(es)
  # pull_request_target:
  #   types: [opened, reopened, closed]
  #   branches:
  #     - main

permissions:
  contents: read

# Set Workflow-level environment variables
env:
  PROJECT: demoapp-backend
  VERSION: ${{ github.head_ref }}    # Set source branch as version

jobs:
  # Skopeo deletes image tag by reference which is not allowed by Docker Hub
  # docker-hub-skopeo:
  #   runs-on: ubuntu-latest
  #   environment: docker-hub
  #   steps:
  #     - name: Output Information
  #       run: |
  #         echo "${{ toJson(github) }}"
  #     # Skopeo is pre-installed in GitHub hosted runners: https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2004-Readme.md#tools
  #     - name: Skopeo Login
  #       run: |
  #         skopeo login ${{ vars.DOCKER_REGISTRY_URL }} \
  #           --username ${{ secrets.DOCKER_REGISTRY_USERNAME }} \
  #           --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }} \
  #     - name: Skopeo Delete Image
  #       id: skopeo-delete
  #       run: |
  #         skopeo delete docker://${{ vars.DOCKER_REGISTRY_URL }}/${{ vars.DOCKER_REPOSITORY }}/${{ env.PROJECT }}:${{ env.VERSION }}

  # Regctl allows image tag deletion which is allowed by Docker Hub
  docker-hub-regctl:
    runs-on: ubuntu-latest
    environment: docker-hub
    steps:
      # Install regctl: https://github.com/regclient/regclient
      - name: Install regctl
        run: |
          curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 > regctl
          chmod 755 regctl
      - name: regctl login
        run: |
          regctl registry login ${{ vars.DOCKER_REGISTRY_URL }} \
            --user ${{ secrets.DOCKER_REGISTRY_USERNAME }} \
            --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }} \
      - name: regctl Delete Image Tag
        run: |
          regctl tag delete ${{ vars.DOCKER_REGISTRY_URL }}/${{ vars.DOCKER_REPOSITORY }}/${{ env.PROJECT }}:${{ env.VERSION }}
